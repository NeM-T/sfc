@incollection{hal,
  TITLE = {{Introduction to the Calculus of Inductive Constructions}},
  AUTHOR = {Paulin-Mohring, Christine},
  URL = {https://hal.inria.fr/hal-01094195},
  BOOKTITLE = {{All about Proofs, Proofs for All}},
  EDITOR = {Bruno Woltzenlogel Paleo and David Delahaye},
  PUBLISHER = {{College Publications}},
  SERIES = {Studies in Logic (Mathematical logic and foundations)},
  VOLUME = {55},
  YEAR = {2015},
  MONTH = Jan,
  KEYWORDS = {Coq proof assistant ; Calculus of Inductive Constructions},
  PDF = {https://hal.inria.fr/hal-01094195/file/CIC.pdf},
  HAL_ID = {hal-01094195},
  HAL_VERSION = {v1},
}

@book{tapl,
publisher = {オーム社},
title = {型システム入門 :  プログラミング言語と型の理論 /},
booktitle = {型システム入門 :  プログラミング言語と型の理論},
isbn = {4-274-80082-2},
keywords = {プログラミング(コンピュータ)},
language = {jpn},
}

@book{takahashi,
publisher = {近代科学社},
series = {02 コンピュータサイエンス大学講座 ; 24},
title = {計算論 : 計算可能性とラムダ計算 /},
author = {高橋 正子},
booktitle = {計算論 : 計算可能性とラムダ計算},
isbn = {9784764901841},
keywords = {数学基礎論},
language = {jpn},
}

@thesis{coq,
author = {坂口和彦},
title = {型付き λ 計算の強正規化定理の形式化},
school = {筑波大学情報学群情報科学類}, 
year = {2014},
type={Bachelor's Thesis},
}

@article{isabelle,
title = {Fundamental Properties of Lambda-calculus},
author = {Tobias Nipkow and Stefan Berghofer},
year = {2020}
}

@book{cpdt,
author = {Chlipala, Adam},
title = {Certified Programming with Dependent Types: A Pragmatic Introduction to the Coq Proof Assistant},
year = {2013},
isbn = {0262026651},
publisher = {The MIT Press},
abstract = {The technology of mechanized program verification can play a supporting role in many kinds of research projects in computer science, and related tools for formal proof-checking are seeing increasing adoption in mathematics and engineering. This book provides an introduction to the Coq software for writing and checking mathematical proofs. It takes a practical engineering focus throughout, emphasizing techniques that will help users to build, understand, and maintain large Coq developments and minimize the cost of code change over time. Two topics, rarely discussed elsewhere, are covered in detail: effective dependently typed programming (making productive use of a feature at the heart of the Coq system) and construction of domain-specific proof tactics. Almost every subject covered is also relevant to interactive computer theorem proving in general, not just program verification, demonstrated through examples of verified programs applied in many different sorts of formalizations. The book develops a unique automated proof style and applies it throughout; even experienced Coq users may benefit from reading about basic Coq concepts from this novel perspective. The book also offers a library of tactics, or programs that find proofs, designed for use with examples in the book. Readers will acquire the necessary skills to reimplement these tactics in other settings by the end of the book. All of the code appearing in the book is freely available online.},
}